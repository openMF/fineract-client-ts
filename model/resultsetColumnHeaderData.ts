/**
 * Apache Fineract REST API
 *
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export interface ResultsetColumnHeaderData { 
    booleanDisplayType?: boolean;
    codeLookupDisplayType?: boolean;
    codeValueDisplayType?: boolean;
    columnCode?: string;
    columnDisplayType?: ResultsetColumnHeaderData.ColumnDisplayTypeEnum;
    columnLength?: number;
    columnName?: string;
    columnType?: ResultsetColumnHeaderData.ColumnTypeEnum;
    columnValues?: Array<object>;
    dateDisplayType?: boolean;
    dateTimeDisplayType?: boolean;
    decimalDisplayType?: boolean;
    integerDisplayType?: boolean;
    isColumnIndexed?: boolean;
    isColumnNullable?: boolean;
    isColumnPrimaryKey?: boolean;
    isColumnUnique?: boolean;
    mandatory?: boolean;
    stringDisplayType?: boolean;
    textDisplayType?: boolean;
    timeDisplayType?: boolean;
}
export namespace ResultsetColumnHeaderData {
    export const ColumnDisplayTypeEnum = {
        Text: 'TEXT',
        String: 'STRING',
        Integer: 'INTEGER',
        Float: 'FLOAT',
        Decimal: 'DECIMAL',
        Date: 'DATE',
        Time: 'TIME',
        Datetime: 'DATETIME',
        Boolean: 'BOOLEAN',
        Binary: 'BINARY',
        Codelookup: 'CODELOOKUP',
        Codevalue: 'CODEVALUE'
    } as const;
    export type ColumnDisplayTypeEnum = typeof ColumnDisplayTypeEnum[keyof typeof ColumnDisplayTypeEnum];
    export const ColumnTypeEnum = {
        Bit: 'BIT',
        Boolean: 'BOOLEAN',
        Smallint: 'SMALLINT',
        Tinyint: 'TINYINT',
        Integer: 'INTEGER',
        Mediumint: 'MEDIUMINT',
        Bigint: 'BIGINT',
        Real: 'REAL',
        Float: 'FLOAT',
        Double: 'DOUBLE',
        Numeric: 'NUMERIC',
        Decimal: 'DECIMAL',
        Serial: 'SERIAL',
        Smallserial: 'SMALLSERIAL',
        Bigserial: 'BIGSERIAL',
        Money: 'MONEY',
        Char: 'CHAR',
        Varchar: 'VARCHAR',
        Longvarchar: 'LONGVARCHAR',
        Text: 'TEXT',
        Tinytext: 'TINYTEXT',
        Mediumtext: 'MEDIUMTEXT',
        Longtext: 'LONGTEXT',
        Json: 'JSON',
        Date: 'DATE',
        Time: 'TIME',
        TimeWithTimezone: 'TIME_WITH_TIMEZONE',
        Timestamp: 'TIMESTAMP',
        Datetime: 'DATETIME',
        TimestampWithTimezone: 'TIMESTAMP_WITH_TIMEZONE',
        Interval: 'INTERVAL',
        Binary: 'BINARY',
        Varbinary: 'VARBINARY',
        Longvarbinary: 'LONGVARBINARY',
        Bytea: 'BYTEA',
        Blob: 'BLOB',
        Tinyblob: 'TINYBLOB',
        Mediumblob: 'MEDIUMBLOB',
        Longblob: 'LONGBLOB'
    } as const;
    export type ColumnTypeEnum = typeof ColumnTypeEnum[keyof typeof ColumnTypeEnum];
}


