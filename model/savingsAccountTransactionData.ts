/**
 * Apache Fineract REST API
 *
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PaymentTypeData } from './paymentTypeData';
import { AccountTransferData } from './accountTransferData';
import { SavingsAccountTransactionEnumData } from './savingsAccountTransactionEnumData';
import { CurrencyData } from './currencyData';
import { SavingsAccountChargesPaidByData } from './savingsAccountChargesPaidByData';
import { PaymentDetailData } from './paymentDetailData';
import { TaxDetailsData } from './taxDetailsData';


export interface SavingsAccountTransactionData { 
    accountId?: number;
    accountNo?: string;
    accountNumber?: string;
    amount?: number;
    amountOnHold?: boolean;
    amountRelease?: boolean;
    annualFee?: boolean;
    annualFeeAndNotReversed?: boolean;
    balanceEndDate?: string;
    balanceNumberOfDays?: number;
    bankNumber?: string;
    chargeTransaction?: boolean;
    chargeTransactionAndNotReversed?: boolean;
    chargesPaidByData?: Set<SavingsAccountChargesPaidByData>;
    checkNumber?: string;
    credit?: boolean;
    cumulativeBalance?: number;
    currency?: CurrencyData;
    date?: string;
    dateFormat?: string;
    debit?: boolean;
    deposit?: boolean;
    depositAndNotReversed?: boolean;
    dividendPayoutAndNotReversed?: boolean;
    endOfBalanceLocalDate?: string;
    entryType?: SavingsAccountTransactionData.EntryTypeEnum;
    feeCharge?: boolean;
    feeChargeAndNotReversed?: boolean;
    id?: number;
    interestPosting?: boolean;
    interestPostingAndNotReversed?: boolean;
    interestedPostedAsOn?: boolean;
    isManualTransaction?: boolean;
    isReversal?: boolean;
    lienTransaction?: boolean;
    locale?: string;
    manualTransaction?: boolean;
    modifiedId?: number;
    notReversed?: boolean;
    note?: string;
    originalTransactionId?: number;
    outstandingChargeAmount?: number;
    overdraftAmount?: number;
    overdraftInterestAndNotReversed?: boolean;
    payCharge?: boolean;
    paymentDetailData?: PaymentDetailData;
    paymentTypeId?: number;
    paymentTypeOptions?: Array<PaymentTypeData>;
    penaltyCharge?: boolean;
    penaltyChargeAndNotReversed?: boolean;
    reasonForBlock?: string;
    receiptNumber?: string;
    refNo?: string;
    releaseTransactionId?: number;
    reversalTransaction?: boolean;
    reversed?: boolean;
    routingCode?: string;
    rowIndex?: number;
    runningBalance?: number;
    savingsAccountChargesPaid?: Set<SavingsAccountChargesPaidByData>;
    savingsAccountId?: number;
    submittedByUsername?: string;
    submittedOnDate?: string;
    taxDetails?: Array<TaxDetailsData>;
    transactionAmount?: number;
    transactionDate?: string;
    transactionType?: SavingsAccountTransactionEnumData;
    transfer?: AccountTransferData;
    waiveCharge?: boolean;
    waiveFeeCharge?: boolean;
    waiveFeeChargeAndNotReversed?: boolean;
    waivePenaltyCharge?: boolean;
    waivePenaltyChargeAndNotReversed?: boolean;
    withHoldTaxAndNotReversed?: boolean;
    withdrawal?: boolean;
    withdrawalFeeAndNotReversed?: boolean;
}
export namespace SavingsAccountTransactionData {
    export const EntryTypeEnum = {
        Credit: 'CREDIT',
        Debit: 'DEBIT'
    } as const;
    export type EntryTypeEnum = typeof EntryTypeEnum[keyof typeof EntryTypeEnum];
}


