/**
 * Apache Fineract REST API
 *
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Money } from './money';
import { CurrencyData } from './currencyData';
import { MonetaryCurrency } from './monetaryCurrency';


export interface LoanProductRelatedDetail { 
    allowPartialPeriodInterestCalcualtion?: boolean;
    amortizationMethod?: LoanProductRelatedDetail.AmortizationMethodEnum;
    annualNominalInterestRate?: number;
    capitalizedIncomeCalculationType?: LoanProductRelatedDetail.CapitalizedIncomeCalculationTypeEnum;
    capitalizedIncomeStrategy?: LoanProductRelatedDetail.CapitalizedIncomeStrategyEnum;
    capitalizedIncomeType?: LoanProductRelatedDetail.CapitalizedIncomeTypeEnum;
    chargeOffBehaviour?: LoanProductRelatedDetail.ChargeOffBehaviourEnum;
    currency?: MonetaryCurrency;
    currencyData?: CurrencyData;
    daysInMonthType?: number;
    daysInYearCustomStrategy?: LoanProductRelatedDetail.DaysInYearCustomStrategyEnum;
    daysInYearType?: number;
    disbursedAmountPercentageForDownPayment?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    equalAmortization?: boolean;
    fixedLength?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestCharged?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    inArrearsTolerance?: Money;
    installmentAmountInMultiplesOf?: number;
    interestCalculationPeriodMethod?: LoanProductRelatedDetail.InterestCalculationPeriodMethodEnum;
    interestMethod?: LoanProductRelatedDetail.InterestMethodEnum;
    interestPeriodFrequencyType?: LoanProductRelatedDetail.InterestPeriodFrequencyTypeEnum;
    interestRecalculationEnabled?: boolean;
    interestRecognitionOnDisbursementDate?: boolean;
    loanScheduleProcessingType?: LoanProductRelatedDetail.LoanScheduleProcessingTypeEnum;
    loanScheduleType?: LoanProductRelatedDetail.LoanScheduleTypeEnum;
    nominalInterestRatePerPeriod?: number;
    numberOfRepayments?: number;
    principal?: Money;
    recurringMoratoriumOnPrincipalPeriods?: number;
    repayEvery?: number;
    repaymentPeriodFrequencyType?: LoanProductRelatedDetail.RepaymentPeriodFrequencyTypeEnum;
    supportedInterestRefundTypes?: Array<LoanProductRelatedDetail.SupportedInterestRefundTypesEnum>;
}
export namespace LoanProductRelatedDetail {
    export const AmortizationMethodEnum = {
        EqualPrincipal: 'EQUAL_PRINCIPAL',
        EqualInstallments: 'EQUAL_INSTALLMENTS',
        Invalid: 'INVALID'
    } as const;
    export type AmortizationMethodEnum = typeof AmortizationMethodEnum[keyof typeof AmortizationMethodEnum];
    export const CapitalizedIncomeCalculationTypeEnum = {
        Flat: 'FLAT'
    } as const;
    export type CapitalizedIncomeCalculationTypeEnum = typeof CapitalizedIncomeCalculationTypeEnum[keyof typeof CapitalizedIncomeCalculationTypeEnum];
    export const CapitalizedIncomeStrategyEnum = {
        EqualAmortization: 'EQUAL_AMORTIZATION'
    } as const;
    export type CapitalizedIncomeStrategyEnum = typeof CapitalizedIncomeStrategyEnum[keyof typeof CapitalizedIncomeStrategyEnum];
    export const CapitalizedIncomeTypeEnum = {
        Fee: 'FEE',
        Interest: 'INTEREST'
    } as const;
    export type CapitalizedIncomeTypeEnum = typeof CapitalizedIncomeTypeEnum[keyof typeof CapitalizedIncomeTypeEnum];
    export const ChargeOffBehaviourEnum = {
        Regular: 'REGULAR',
        ZeroInterest: 'ZERO_INTEREST',
        AccelerateMaturity: 'ACCELERATE_MATURITY'
    } as const;
    export type ChargeOffBehaviourEnum = typeof ChargeOffBehaviourEnum[keyof typeof ChargeOffBehaviourEnum];
    export const DaysInYearCustomStrategyEnum = {
        FullLeapYear: 'FULL_LEAP_YEAR',
        Feb29PeriodOnly: 'FEB_29_PERIOD_ONLY'
    } as const;
    export type DaysInYearCustomStrategyEnum = typeof DaysInYearCustomStrategyEnum[keyof typeof DaysInYearCustomStrategyEnum];
    export const InterestCalculationPeriodMethodEnum = {
        Daily: 'DAILY',
        SameAsRepaymentPeriod: 'SAME_AS_REPAYMENT_PERIOD',
        Invalid: 'INVALID'
    } as const;
    export type InterestCalculationPeriodMethodEnum = typeof InterestCalculationPeriodMethodEnum[keyof typeof InterestCalculationPeriodMethodEnum];
    export const InterestMethodEnum = {
        DecliningBalance: 'DECLINING_BALANCE',
        Flat: 'FLAT',
        Invalid: 'INVALID'
    } as const;
    export type InterestMethodEnum = typeof InterestMethodEnum[keyof typeof InterestMethodEnum];
    export const InterestPeriodFrequencyTypeEnum = {
        Days: 'DAYS',
        Weeks: 'WEEKS',
        Months: 'MONTHS',
        Years: 'YEARS',
        WholeTerm: 'WHOLE_TERM',
        Invalid: 'INVALID'
    } as const;
    export type InterestPeriodFrequencyTypeEnum = typeof InterestPeriodFrequencyTypeEnum[keyof typeof InterestPeriodFrequencyTypeEnum];
    export const LoanScheduleProcessingTypeEnum = {
        Horizontal: 'HORIZONTAL',
        Vertical: 'VERTICAL'
    } as const;
    export type LoanScheduleProcessingTypeEnum = typeof LoanScheduleProcessingTypeEnum[keyof typeof LoanScheduleProcessingTypeEnum];
    export const LoanScheduleTypeEnum = {
        Cumulative: 'CUMULATIVE',
        Progressive: 'PROGRESSIVE'
    } as const;
    export type LoanScheduleTypeEnum = typeof LoanScheduleTypeEnum[keyof typeof LoanScheduleTypeEnum];
    export const RepaymentPeriodFrequencyTypeEnum = {
        Days: 'DAYS',
        Weeks: 'WEEKS',
        Months: 'MONTHS',
        Years: 'YEARS',
        WholeTerm: 'WHOLE_TERM',
        Invalid: 'INVALID'
    } as const;
    export type RepaymentPeriodFrequencyTypeEnum = typeof RepaymentPeriodFrequencyTypeEnum[keyof typeof RepaymentPeriodFrequencyTypeEnum];
    export const SupportedInterestRefundTypesEnum = {
        MerchantIssuedRefund: 'MERCHANT_ISSUED_REFUND',
        PayoutRefund: 'PAYOUT_REFUND'
    } as const;
    export type SupportedInterestRefundTypesEnum = typeof SupportedInterestRefundTypesEnum[keyof typeof SupportedInterestRefundTypesEnum];
}


