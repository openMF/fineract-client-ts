/**
 * Apache Fineract REST API
 *
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AllowAttributeOverrides } from './allowAttributeOverrides';
import { GetLoanPaymentChannelToFundSourceMappings } from './getLoanPaymentChannelToFundSourceMappings';
import { LoanProductChargeData } from './loanProductChargeData';
import { RateData } from './rateData';
import { LoanProductChargeToGLAccountMapper } from './loanProductChargeToGLAccountMapper';
import { CreditAllocationData } from './creditAllocationData';
import { AdvancedPaymentData } from './advancedPaymentData';
import { PostChargeOffReasonToExpenseAccountMappings } from './postChargeOffReasonToExpenseAccountMappings';


/**
 * PostLoanProductsRequest
 */
export interface PostLoanProductsRequest { 
    accountMovesOutOfNPAOnlyOnArrearsCompletion?: boolean;
    accountingRule?: number;
    allowApprovedDisbursedAmountsOverApplied?: boolean;
    allowAttributeOverrides?: AllowAttributeOverrides;
    allowCompoundingOnEod?: boolean;
    allowPartialPeriodInterestCalcualtion?: boolean;
    allowVariableInstallments?: boolean;
    amortizationType?: number;
    canDefineInstallmentAmount?: boolean;
    canUseForTopup?: boolean;
    capitalizedIncomeCalculationType?: PostLoanProductsRequest.CapitalizedIncomeCalculationTypeEnum;
    capitalizedIncomeStrategy?: PostLoanProductsRequest.CapitalizedIncomeStrategyEnum;
    capitalizedIncomeType?: PostLoanProductsRequest.CapitalizedIncomeTypeEnum;
    chargeOffBehaviour?: string;
    chargeOffExpenseAccountId?: number;
    chargeOffFraudExpenseAccountId?: number;
    chargeOffReasonToExpenseAccountMappings?: Array<PostChargeOffReasonToExpenseAccountMappings>;
    charges?: Array<LoanProductChargeData>;
    closeDate?: string;
    creditAllocation?: Array<CreditAllocationData>;
    currencyCode?: string;
    dateFormat?: string;
    daysInMonthType?: number;
    daysInYearCustomStrategy?: string;
    daysInYearType?: number;
    deferredIncomeLiabilityAccountId?: number;
    delinquencyBucketId?: number;
    description?: string;
    digitsAfterDecimal?: number;
    disallowExpectedDisbursements?: boolean;
    disallowInterestCalculationOnPastDue?: boolean;
    disbursedAmountPercentageForDownPayment?: number;
    dueDaysForRepaymentEvent?: number;
    enableAccrualActivityPosting?: boolean;
    enableAutoRepaymentForDownPayment?: boolean;
    enableDownPayment?: boolean;
    enableIncomeCapitalization?: boolean;
    enableInstallmentLevelDelinquency?: boolean;
    externalId?: string;
    feeToIncomeAccountMappings?: Array<LoanProductChargeToGLAccountMapper>;
    fixedLength?: number;
    fixedPrincipalPercentagePerInstallment?: number;
    fundId?: number;
    fundSourceAccountId?: number;
    goodwillCreditAccountId?: number;
    graceOnArrearsAgeing?: number;
    graceOnInterestPayment?: number;
    graceOnPrincipalPayment?: number;
    holdGuaranteeFunds?: boolean;
    inArrearsTolerance?: number;
    inMultiplesOf?: number;
    includeInBorrowerCycle?: boolean;
    incomeFromCapitalizationAccountId?: number;
    incomeFromChargeOffFeesAccountId?: number;
    incomeFromChargeOffInterestAccountId?: number;
    incomeFromChargeOffPenaltyAccountId?: number;
    incomeFromFeeAccountId?: number;
    incomeFromGoodwillCreditFeesAccountId?: number;
    incomeFromGoodwillCreditInterestAccountId?: number;
    incomeFromGoodwillCreditPenaltyAccountId?: number;
    incomeFromPenaltyAccountId?: number;
    incomeFromRecoveryAccountId?: number;
    installmentAmountInMultiplesOf?: number;
    interestCalculationPeriodType?: number;
    interestOnLoanAccountId?: number;
    interestRateFrequencyType?: number;
    interestRatePerPeriod?: number;
    interestRateVariationsForBorrowerCycle?: Array<number>;
    interestRecalculationCompoundingMethod?: number;
    interestRecognitionOnDisbursementDate?: boolean;
    interestType?: number;
    isArrearsBasedOnOriginalSchedule?: boolean;
    isCompoundingToBePostedAsTransaction?: boolean;
    isEqualAmortization?: boolean;
    isInterestRecalculationEnabled?: boolean;
    isLinkedToFloatingInterestRates?: boolean;
    loanPortfolioAccountId?: number;
    loanScheduleProcessingType?: string;
    loanScheduleType?: string;
    locale?: string;
    maxInterestRatePerPeriod?: number;
    maxNumberOfRepayments?: number;
    maxPrincipal?: number;
    maxTrancheCount?: number;
    minInterestRatePerPeriod?: number;
    minNumberOfRepayments?: number;
    minPrincipal?: number;
    minimumDaysBetweenDisbursalAndFirstRepayment?: number;
    multiDisburseLoan?: boolean;
    name?: string;
    numberOfRepaymentVariationsForBorrowerCycle?: Array<number>;
    numberOfRepayments?: number;
    outstandingLoanBalance?: number;
    overAppliedCalculationType?: string;
    overAppliedNumber?: number;
    overDueDaysForRepaymentEvent?: number;
    overdueDaysForNPA?: number;
    overpaymentLiabilityAccountId?: number;
    paymentAllocation?: Array<AdvancedPaymentData>;
    paymentChannelToFundSourceMappings?: Array<GetLoanPaymentChannelToFundSourceMappings>;
    penaltyToIncomeAccountMappings?: Array<LoanProductChargeToGLAccountMapper>;
    preClosureInterestCalculationStrategy?: number;
    principal?: number;
    principalThresholdForLastInstallment?: number;
    principalVariationsForBorrowerCycle?: Array<number>;
    rates?: Array<RateData>;
    recalculationCompoundingFrequencyInterval?: number;
    recalculationCompoundingFrequencyOnDayType?: number;
    recalculationCompoundingFrequencyType?: number;
    recalculationRestFrequencyInterval?: number;
    recalculationRestFrequencyType?: number;
    receivableFeeAccountId?: number;
    receivableInterestAccountId?: number;
    receivablePenaltyAccountId?: number;
    repaymentEvery?: number;
    repaymentFrequencyType?: number;
    repaymentStartDateType?: number;
    rescheduleStrategyMethod?: number;
    shortName?: string;
    startDate?: string;
    supportedInterestRefundTypes?: Array<string>;
    transactionProcessingStrategyCode?: string;
    transfersInSuspenseAccountId?: number;
    useBorrowerCycle?: boolean;
    writeOffAccountId?: number;
}
export namespace PostLoanProductsRequest {
    export const CapitalizedIncomeCalculationTypeEnum = {
        Flat: 'FLAT'
    } as const;
    export type CapitalizedIncomeCalculationTypeEnum = typeof CapitalizedIncomeCalculationTypeEnum[keyof typeof CapitalizedIncomeCalculationTypeEnum];
    export const CapitalizedIncomeStrategyEnum = {
        EqualAmortization: 'EQUAL_AMORTIZATION'
    } as const;
    export type CapitalizedIncomeStrategyEnum = typeof CapitalizedIncomeStrategyEnum[keyof typeof CapitalizedIncomeStrategyEnum];
    export const CapitalizedIncomeTypeEnum = {
        Fee: 'FEE',
        Interest: 'INTEREST'
    } as const;
    export type CapitalizedIncomeTypeEnum = typeof CapitalizedIncomeTypeEnum[keyof typeof CapitalizedIncomeTypeEnum];
}


